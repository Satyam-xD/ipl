export default async function handler(req, res) {
    try {
        // First try CricAPI (free tier)
        const cricapiResponse = await fetch('https://api.cricapi.com/v1/currentMatches?apikey=demo');
        
        if (cricapiResponse.ok) {
            const data = await cricapiResponse.json();
            
            if (data.status === "success") {
                const iplMatches = data.data.filter(match => 
                    match.series.includes("IPL") || 
                    match.matchType === "t20"
                );
                
                return res.status(200).json(formatMatches(iplMatches));
            }
        }
        
        // Fallback to CricketData
        const cricketDataResponse = await fetch('https://api.cricketdata.org/v1/matches?key=demo');
        const cricketData = await cricketDataResponse.json();
        
        const iplMatches = cricketData.filter(match => 
            match.tournament?.name.includes("IPL")
        );
        
        return res.status(200).json(formatMatches(iplMatches));
        
    } catch (error) {
        console.error('API Error:', error);
        return res.status(500).json({ 
            error: 'Failed to fetch matches',
            message: error.message 
        });
    }
}

function formatMatches(matches) {
    return matches.map(match => ({
        team1: match.teams?.[0]?.name || match.team1 || "TBD",
        team2: match.teams?.[1]?.name || match.team2 || "TBD",
        status: match.status || "Upcoming",
        score: match.score || null,
        venue: match.venue?.name || match.venue || null
    }));
}
